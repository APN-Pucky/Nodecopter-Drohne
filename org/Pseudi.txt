steuerung testen {
	per freeflight testen✓
	links, rechts, oben, unten per Programm{
		Packete mit direkten Befehlen der Parrot-Software✓
		Packete zum abbrechen von anderen Befehlen✓
	}
}
sensoreigenschaften testen {
	sensoren vermessen {
		internetrecherche �ber daten 
		einzelne analyse der sensoren auf deren eigenschaften auf festem untergrund 
		wirkungsgrade und stabilit�t und vertrauensquote feststellen: genauigkeit der gemessenen daten
	}
	sensoreigenschaften nutzen {
		wie kann man verschiedene Sensoren nutzen, um genauer und stabiler zu messen?
		kombination von sensoren
	}
}
Raumgrundschnittanaylse {
	auf einer Ebene einen kreisf�rmigen Grundschnitt erstellen {
		drohne bleibt auf einem punkt (vergleich mit der unteren Kamera)
		entfernungsmesser misst punktuelle entfernung zum objekt direkt vor der drohne
		langsam drehen und entfernung im pc umrechnen in beobachtungspunkte
	}
	problematische Sektoren nachanalysieren {
		in Safezones
		senkrecht zum fehlerhaften Sektor
		normale analyse starten
	}
	Dangerzones umgehen {
		problematische Gegenst�nde{
			Fenster
			Stangen
			Pflanzen
			d�nne Stiele, Dr�hte und Seile etc.
		}
		Mindestabstand zu Sektoren und problem. Gegenst.
	}
}
tracking und umgebungsprogramm {
	darstellungsebene auf computer im browser {
		zeichenebene mit linien zwischen den beobachtungspunkten
		drohnenzeichen + drehung an position der drohne
		ggf animierte Flugroute der Drohne
		Safezone: normaler wei�er Hintergrund ohne Zusatz
		Dangerzone: rote Fl�chen ggf mit Strafierungen(problem. Gegenst.)
	}
	3D simulationsdarstellung {
		objekte erkennen und 3d darstellen(GLOOP/OpenGL)
		steuerung durch den raum
		daten f�r weiteren nutzen zur Verf�gung stellen(datenbank)
		Texturbilder erstellen und abgleichen
	}
	benutzerdefinierte Parameter {
		genauigkeit: max abstand zwischen beobachtungspunkten
		schnelligkeit: drehgeschwindigkeit der drohne
		groundmode: vergleich mit dem boden f�r genauere POSITION und drehung + H�HE
		wallmode: vergleich mit wandstrukturen f�r genauere position und DREHUNG + H�HE
	}
	netzwerkaufbau {
		drohne(packages) - WLAN receiver server program(Node.js/php) - client browser(javascript/html)
	}
}
Wegfindung {
	linear {
		direkter Weg vom Startpunkt zum Endpunkt
		beschleunigen und abbremsen beachten
		standort kontrollieren und ggf korrigieren
	}
	Patroullienbefehl {
		dauerhaftes drehen
		dabei auf flugroute fliegen
		bei �nderung zum Server alarm schlagen
	}
	hindernis im weg {
		hindernisse erkennen, kreuzende linien
		aufteilen der strecke in einzelne Teilstrecken
		umgehen von hindernissen, schnellster Weg
	}
}
Kamera Tiefenbildanalytik {
	Strukturen erkennen {
		ebene Fl�chen(W�nde, Fenster, Kanten)
		st�rObjekte ann�hern und ausgleichen(Pflanzen, Stangen)
		unregelm��igkeiten zur 0Achse rausfiltern(Tische 10 cm unter Fluglinie)
		aus verschiedenen Winkeln analysieren
	}
	Dangerzones einrichten und umfliegen
	3D Modell erzeugen
}
Kontrolle �ber VR-Brille(pappebrille) {
	Simulation und Empfinden der vr bilder
	kopplung von handy und drohnenbild
	steuerung der drohne {
		sensoren des handys -> Steuerung der drohne(drehen, kippen)
		gestik und kamera(vorne, hinten, hoch, runter)
	}
	Verkn�pfen mit Raumanalytik {
		befehl: raum durchsuchen
		3D Holoeffekte, da die Ebenen festgesetzt sind
		ann�herung von kurven und ecken
		farbige transparente oberfl�che
		transparenz l�sst nach, wenn man n�her kommt
	}
}
intelligente Drohne ohne Host {
	eigenst�ndige Drohne {
		programme auf drohne laden
		falls ohne befehl/programm: zur�ck zum Hostserver und nachschub holen
		falls keine befehle, automatisch landen und energie sparen + msg: Keine Befehle, ausschalten?
	}
	Master-Slave {
		Drohne folgt einer Person st�ndig
		landet w�hrend langen wartezeit
		analysieren von gestik von master(folgen, warten/landen)
		Erkennung anhand von Merkmalen(Symbole, Farbe, Objekt, Person)
	}
	automatische Raumanalyse, falls in neuem Raum
}